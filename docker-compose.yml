services:
  nginx:
    image: nginx:1.15.12-alpine
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./src:/var/www/html
    networks:
      - wordpress-network

  database:
    image: mysql:5.7.28
    restart: unless-stopped
    ports:
      - 3307:3306
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - wordpress-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$DB_ROOT_PASSWORD",
        ]
      timeout: 30s
      retries: 5

  phpadmin:
    depends_on:
      - database
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    env_file: .env
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    networks:
      - wordpress-network

  wordpress:
    depends_on:
      - database
    build:
      context: ./wordpress
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      WORDPRESS_DB_HOST: database:3306
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: "${DB_USER}"
      WORDPRESS_DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./src:/var/www/html:rw
    networks:
      - wordpress-network

volumes:
  db-data:

networks:
  wordpress-network:
    driver: bridge
